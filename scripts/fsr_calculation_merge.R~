#get Arguments
args <- commandArgs(trailingOnly = TRUE)

source(args[8]) #source common functions from file

kmer <- args[1]	#kmer of interest

profile.plus <- as.numeric( strsplit(args[2], ":")[[1]] )	#data plus strand profile #split the combined string at :s

profile.minus <- as.numeric( strsplit(args[3], ":")[[1]] )	#data minus strand profile #split the combined string at :s

profile.naked.plus <- as.numeric( strsplit(args[4], ":")[[1]] )	#background plus strand profile #split the combined string at :s

profile.naked.minus <- as.numeric( strsplit(args[5], ":")[[1]] )	#background minus strand profile #split the combined string at :s

skip.flag <- args[6]	#skip or how to handle normalization

extension <- as.numeric(args[7])	#extension for norm window

# START #
kl=nchar(kmer)

#gaussian smooth after scaled diff to median normalization
gauss.list.plus <- gaussian.median.diff(profile.plus, profile.naked.plus, kl, skip.flag, extension)
gauss.list.minus <- gaussian.median.diff(profile.minus, profile.naked.minus, kl, skip.flag, extension)

#merge
profile.merged <- ( gauss.list.plus$profile + gauss.list.minus$profile )/2

#estimate footprint, borders and best shoulder ranges
border.list.plus <- sobel.borders(profile=gauss.list.plus$profile, kl=kl)
border.list.minus <- sobel.borders(profile=gauss.list.plus$profile, kl=kl)
border.list.merged <- sobel.borders(profile=profile.merged, kl=kl)

#calculate adjusted FOS
if(border.list.plus$flag){
	fsr.merged <- adj.fsr(profile=profile.merged, kl=kl, usb=border.list.merged$us, dsb=border.list.merged$ds, usr=border.list.merged$range.us, dsr=border.list.merged$range.ds)
}else{	
	fsr.merged="NA" 
}

if(border.list.plus$flag){
	fsr.plus <- adj.fsr(profile=gauss.list.plus$profile, kl=kl, usb=border.list.plus$us, dsb=border.list.plus$ds, usr=border.list.plus$range.us, dsr=border.list.plus$range.ds)
}else{	
	fsr.plus="NA" 
}

if(border.list.minus$flag){
	fsr.minus <- adj.fsr(profile=gauss.list.minus$profile, kl=kl, usb=border.list.minus$us, dsb=border.list.minus$ds, usr=border.list.minus$range.us, dsr=border.list.plus$range.ds)
}else{	
	fsr.minus="NA" 
}

#return / print
cat(paste0("fsr_merged=", fsr.merged," fsr_plus=", fsr.plus, " fsr_minus=", fsr.minus, " scale_plus=", gauss.list.plus$scale.factor, " scale_minus=", gauss.list.minus$scale.factor))
cat("profile=",profile.merged, sep=":")


